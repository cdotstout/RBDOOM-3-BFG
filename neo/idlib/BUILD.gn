# Copyright (c) 2013 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

config("configuration") {
  include_dirs = [
    "sys/",
    "containers",
    ".",
    "../libs/glew/include",
  ]

  cflags_cc = [
    "-frtti",
    "-fexceptions",
  ]

  cflags = [
    "-pipe",
    "-w",
    "-DUSE_INTRINSICS",
    "-DUSE_EXCEPTIONS",
    "-DUSE_DOOMCLASSIC",
    "-D__IDLIB__",
    "-D__DOOM_DLL__",
  ]
}

static_library("idlib") {
  configs += [ ":configuration" ]
  #configs -= [ "//build/config/clang:find_bad_constructs" ]

  deps = [
    "//mojo/public/c/gpu",
    "//mojo/public/c/gpu:gpu_onscreen",
  ]

  sources = [
    "Swap.h",
    "Dict.h",
    "CmdArgs.h",
    "Lib.h",
    "Thread.h",
    "Token.h",
    "precompiled.h",
    "Parser.h",
    "Callback.h",
    "MapFile.h",
    "Base64.h",
    "SoftwareCache.h",
    "LangDict.h",
    "DataQueue.h",
    "StrStatic.h",
    "BitMsg.h",
    "ParallelJobList_JobHeaders.h",
    "Str.h",
    "Heap.h",
    "Timer.h",
    "Lexer.h",
    "ParallelJobList.h",
    "CmdArgs.cpp",
    "Token.cpp",
    "Lexer.cpp",
    "BitMsg.cpp",
    "LangDict.cpp",
    "Timer.cpp",
    "Str.cpp",
    "Dict.cpp",
    "MapFile.cpp",
    "Base64.cpp",
    "ParallelJobList.cpp",
    "Parser.cpp",
    "CommandLink.cpp",
    "SoftwareCache.cpp",
    "Thread.cpp",
    "Lib.cpp",
    "Heap.cpp",
    "precompiled.cpp",
    "RectAllocator.cpp",
    "bv/Sphere.h",
    "bv/Bounds.h",
    "bv/Box.h",
    "bv/Box.cpp",
    "bv/Bounds.cpp",
    "bv/Sphere.cpp",
    "containers/Sort.h",
    "containers/Hierarchy.h",
    "containers/StrPool.h",
    "containers/PlaneSet.h",
    "containers/VectorSet.h",
    "containers/Array.h",
    "containers/BinSearch.h",
    "containers/LinkList.h",
    "containers/Stack.h",
    "containers/HashTable.h",
    "containers/StaticList.h",
    "containers/HashIndex.h",
    "containers/StrList.h",
    "containers/BTree.h",
    "containers/List.h",
    "containers/Queue.h",
    "containers/HashIndex.cpp",
    "geometry/Winding2D.h",
    "geometry/DrawVert.h",
    "geometry/Surface_SweptSpline.h",
    "geometry/Surface.h",
    "geometry/TraceModel.h",
    "geometry/Winding.h",
    "geometry/JointTransform.h",
    "geometry/RenderMatrix.h",
    "geometry/Surface_Patch.h",
    "geometry/Surface_Polytope.h",
    "geometry/DrawVert_intrinsics.h",
    "geometry/DrawVert.cpp",
    "geometry/Winding.cpp",
    "geometry/Surface.cpp",
    "geometry/TraceModel.cpp",
    "geometry/Winding2D.cpp",
    "geometry/Surface_Patch.cpp",
    "geometry/RenderMatrix.cpp",
    "geometry/Surface_Polytope.cpp",
    "geometry/JointTransform.cpp",
    "geometry/Surface_SweptSpline.cpp",
    "hashing/MD5.h",
    "hashing/CRC32.h",
    "hashing/MD4.h",
    "hashing/MD5.cpp",
    "hashing/MD4.cpp",
    "hashing/CRC32.cpp",
    "math/Vector.h",
    "math/VectorI.h",
    "math/VecX.h",
    "math/Quat.h",
    "math/Simd_SSE.h",
    "math/Complex.h",
    "math/Curve.h",
    "math/MatX.h",
    "math/Angles.h",
    "math/Extrapolate.h",
    "math/Random.h",
    "math/Interpolate.h",
    "math/Rotation.h",
    "math/Lcp.h",
    "math/Simd_Generic.h",
    "math/Ode.h",
    "math/Simd.h",
    "math/Math.h",
    "math/Pluecker.h",
    "math/Plane.h",
    "math/Matrix.h",
    "math/Polynomial.h",
    "math/Pluecker.cpp",
    "math/Polynomial.cpp",
    "math/Ode.cpp",
    "math/Rotation.cpp",
    "math/VecX.cpp",
    "math/Lcp.cpp",
    "math/Simd.cpp",
    "math/MatX.cpp",
    "math/Simd_Generic.cpp",
    "math/Simd_SSE.cpp",
    "math/Angles.cpp",
    "math/Vector.cpp",
    "math/Matrix.cpp",
    "math/Math.cpp",
    "math/Complex.cpp",
    "math/Plane.cpp",
    "math/Quat.cpp",
    "sys/sys_threading.h",
    "sys/sys_assert.h",
    "sys/sys_builddefines.h",
    "sys/sys_types.h",
    "sys/sys_alloc_tags.h",
    "sys/sys_filesystem.h",
    "sys/sys_intrinsics.h",
    "sys/sys_includes.h",
    "sys/sys_defines.h",
    "sys/sys_assert.cpp",
    "sys/posix/posix_thread.cpp",
  ]
}